---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: oauth2-proxy
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: auth
    server: "https://kubernetes.default.svc"
  project: infra
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - FailOnSharedResource=true
    retry:
      limit: 15
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 10m
  source:
    repoURL: "https://oauth2-proxy.github.io/manifests"
    targetRevision: "~6.12.0"
    chart: "oauth2-proxy"
    helm:
      releaseName: oauth2-proxy
      values: |
        config:
          existingSecret: di-flink-oauth2-proxy-secret
          configFile: |-
            cookie_secret="OQINaROshtE9TcZkNAm-5Zs2Pv3xaWytBmc5W7sPX7w="
            cookie_domains=".kroche.co"
            whitelist_domains=[".kroche.co"]
            # only users with this domain will be let in
            email_domains=["kroche.co"]

            client_id="oauth2-proxy"
            client_secret="b2F1dGgyLXByb3h5LWNsaWVudC1zZWNyZXQK"
            cookie_secure="false"

            redirect_url="https://oauth2-proxy.kroche.co/oauth2/callback"

            # we don't want to proxy anything so pick a non-existent directory
            upstreams = [ "file:///dev/null" ]

            # return authenticated user to nginx
            set_xauthrequest = true
            provider="oidc"
            oidc_issuer_url="https://dex.kroche.co"

        ingress:
          enabled: true
          className: nginx
          path: /oauth2
          hosts:
            - oauth2-proxy.kroche.co
          tls:
            - secretName: oauth2-proxy.kroche.co
              hosts:
                - oauth2-proxy.kroche.co
